"use strict";(()=>{var q=(g,A)=>()=>(A||g((A={exports:{}}).exports,A),A.exports);var U=q((_,F)=>{(function(g,A){if(typeof define=="function"&&define.amd)define("webextension-polyfill",["module"],A);else if(typeof _<"u")A(F);else{var u={exports:{}};A(u),g.browser=u.exports}})(typeof globalThis<"u"?globalThis:typeof self<"u"?self:_,function(g){"use strict";if(!(globalThis.chrome&&globalThis.chrome.runtime&&globalThis.chrome.runtime.id))throw new Error("This script should only be loaded in a browser extension.");if(globalThis.browser&&globalThis.browser.runtime&&globalThis.browser.runtime.id)g.exports=globalThis.browser;else{let A="The message port closed before a response was received.",u=o=>{let p={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(Object.keys(p).length===0)throw new Error("api-metadata.json has not been included in browser-polyfill");class R extends WeakMap{constructor(r,t=void 0){super(t),this.createItem=r}get(r){return this.has(r)||this.set(r,this.createItem(r)),super.get(r)}}let w=e=>e&&typeof e=="object"&&typeof e.then=="function",T=(e,r)=>(...t)=>{o.runtime.lastError?e.reject(new Error(o.runtime.lastError.message)):r.singleCallbackArg||t.length<=1&&r.singleCallbackArg!==!1?e.resolve(t[0]):e.resolve(t)},d=e=>e==1?"argument":"arguments",x=(e,r)=>function(n,...a){if(a.length<r.minArgs)throw new Error(`Expected at least ${r.minArgs} ${d(r.minArgs)} for ${e}(), got ${a.length}`);if(a.length>r.maxArgs)throw new Error(`Expected at most ${r.maxArgs} ${d(r.maxArgs)} for ${e}(), got ${a.length}`);return new Promise((c,m)=>{if(r.fallbackToNoCallback)try{n[e](...a,T({resolve:c,reject:m},r))}catch(s){console.warn(`${e} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,s),n[e](...a),r.fallbackToNoCallback=!1,r.noCallback=!0,c()}else r.noCallback?(n[e](...a),c()):n[e](...a,T({resolve:c,reject:m},r))})},h=(e,r,t)=>new Proxy(r,{apply(n,a,c){return t.call(a,e,...c)}}),k=Function.call.bind(Object.prototype.hasOwnProperty),y=(e,r={},t={})=>{let n=Object.create(null),a={has(m,s){return s in e||s in n},get(m,s,l){if(s in n)return n[s];if(!(s in e))return;let i=e[s];if(typeof i=="function")if(typeof r[s]=="function")i=h(e,e[s],r[s]);else if(k(t,s)){let S=x(s,t[s]);i=h(e,e[s],S)}else i=i.bind(e);else if(typeof i=="object"&&i!==null&&(k(r,s)||k(t,s)))i=y(i,r[s],t[s]);else if(k(t,"*"))i=y(i,r[s],t["*"]);else return Object.defineProperty(n,s,{configurable:!0,enumerable:!0,get(){return e[s]},set(S){e[s]=S}}),i;return n[s]=i,i},set(m,s,l,i){return s in n?n[s]=l:e[s]=l,!0},defineProperty(m,s,l){return Reflect.defineProperty(n,s,l)},deleteProperty(m,s){return Reflect.deleteProperty(n,s)}},c=Object.create(e);return new Proxy(c,a)},b=e=>({addListener(r,t,...n){r.addListener(e.get(t),...n)},hasListener(r,t){return r.hasListener(e.get(t))},removeListener(r,t){r.removeListener(e.get(t))}}),v=new R(e=>typeof e!="function"?e:function(t){let n=y(t,{},{getContent:{minArgs:0,maxArgs:0}});e(n)}),B=new R(e=>typeof e!="function"?e:function(t,n,a){let c=!1,m,s=new Promise(P=>{m=function(f){c=!0,P(f)}}),l;try{l=e(t,n,m)}catch(P){l=Promise.reject(P)}let i=l!==!0&&w(l);if(l!==!0&&!i&&!c)return!1;let S=P=>{P.then(f=>{a(f)},f=>{let G;f&&(f instanceof Error||typeof f.message=="string")?G=f.message:G="An unexpected error occurred",a({__mozWebExtensionPolyfillReject__:!0,message:G})}).catch(f=>{console.error("Failed to send onMessage rejected reply",f)})};return S(i?l:s),!0}),W=({reject:e,resolve:r},t)=>{o.runtime.lastError?o.runtime.lastError.message===A?r():e(new Error(o.runtime.lastError.message)):t&&t.__mozWebExtensionPolyfillReject__?e(new Error(t.message)):r(t)},M=(e,r,t,...n)=>{if(n.length<r.minArgs)throw new Error(`Expected at least ${r.minArgs} ${d(r.minArgs)} for ${e}(), got ${n.length}`);if(n.length>r.maxArgs)throw new Error(`Expected at most ${r.maxArgs} ${d(r.maxArgs)} for ${e}(), got ${n.length}`);return new Promise((a,c)=>{let m=W.bind(null,{resolve:a,reject:c});n.push(m),t.sendMessage(...n)})},j={devtools:{network:{onRequestFinished:b(v)}},runtime:{onMessage:b(B),onMessageExternal:b(B),sendMessage:M.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:M.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},C={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return p.privacy={network:{"*":C},services:{"*":C},websites:{"*":C}},y(o,j,p)};g.exports=u(chrome)}})});var E=window;var I=null,L=E.browser||E.chrome;try{I=U()}catch{console.warn("webextension-polyfill is not available \u2014 running in non-extension env?")}var V=()=>!!I,O=()=>V()&&I?.runtime.getBrowserInfo().then(g=>g.name==="Firefox");var $=async()=>(await L?.storage.local.get("github_token"))?.github_token;var z=O()?browser:chrome,H="Iv23li5frjjDBAV3DfuR",N="https://github.com/login/",D="https://api.github.com/gists/";z.runtime.onMessage.addListener((g,A,u)=>{if(g.type==="GITHUB_DEVICE_FLOW")return(async()=>{try{if(g.action==="startDeviceFlow"){let o=await fetch(`${N}device/code`,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Accept:"application/json"},body:`client_id=${encodeURIComponent(H)}&scope=gist`});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);let p=await o.json();u({success:!0,data:p})}else if(g.action==="getToken"){let o=await fetch(`${N}/oauth/access_token`,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Accept:"application/json"},body:`client_id=${encodeURIComponent(H)}&device_code=${encodeURIComponent(g.device_code)}&grant_type=urn:ietf:params:oauth:grant-type:device_code`});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);let p=await o.json();u({success:!0,data:p})}}catch(o){u({success:!1,error:o instanceof Error?o.message:String(o)})}})(),!0;if(g.type==="GITHUB_GIST_API")return(async()=>{let o=await $();console.log("token",o);let{action:p,gistId:R,payload:w}=g,T={Authorization:`Bearer ${o}`,Accept:"application/vnd.github+json"};if(p==="findGist"){let d=await fetch(`${D}${R}`,{headers:T});if(!d.ok)throw new Error("Failed to fetch gist");let x=await d.json(),h={id:x.id,url:x.url,public:x.public,files:x.files};u({success:!0,data:h||null})}else if(p==="createOrUpdateLooiGist"){console.log("payload",w);let d,x,h,k="Settings for looi extension";R?(d=`${D}${R}`,x="PATCH",h={description:k,files:w?.files,public:w?.publicGist}):(d=`${D}`,x="POST",h={description:k,files:w?.files,public:w?.publicGist});let y=await fetch(d,{method:x,headers:{...T,"Content-Type":"application/json"},body:JSON.stringify(h)}),b=await y.json();console.log("response",b);let v={id:b.id,url:b.url,public:b.public,files:b.files};u({success:y.ok,data:v})}})().catch(o=>u({success:!1,error:o instanceof Error?o.message:String(o)})),!0});})();
//# sourceMappingURL=background.js.map
